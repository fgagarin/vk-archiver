[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "vk-photos"
version = "0.1.0"
description = "Скрипт для скачивания фотографий пользователей / групп / бесед ВКонтакте"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "YarikMix", email = ""}
]
keywords = ["vk", "vkontakte", "photos", "downloader", "scraper"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Multimedia :: Graphics",
    "Topic :: Utilities",
]
requires-python = ">=3.10, <3.11"
dependencies = [
    "aiofiles==24.1.0",
    "aiohttp >=3.10.11, <4.0",
    "tqdm==4.67.1",
    "vk-api==11.10.0",
    "pytils==0.4.4",
    "requests==2.32.4",
    "pytrovich==0.0.4",
    "pyyaml==6.0.2",
    "yt-dlp==2025.7.21",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.10.0",
    "pytest-cov>=4.0.0",
    "mypy>=1.0.0",
    "ruff>=0.1.0",
    "black>=23.0.0",
    "pre-commit>=3.0.0",
]

[project.scripts]
vk-photos = "vk_photos.main:main"

[project.urls]
Homepage = "https://github.com/YarikMix/vk-photos"
Repository = "https://github.com/YarikMix/vk-photos"
Issues = "https://github.com/YarikMix/vk-photos/issues"

[tool.hatch.build.targets.wheel]
packages = ["vk_photos"]


[tool.mypy]
python_version = ">=3.10, <3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--asyncio-mode=auto",
]
asyncio_mode = "auto"

[tool.ruff]
target-version = "py310"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["B011"]

[tool.black]
target-version = ['py310']
line-length = 88

[dependency-groups]
dev = [
    "mypy>=1.14.1",
    "pre-commit>=4.2.0",
    "pytest>=8.3.5",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=6.2.1",
    "pytest-mock>=3.14.1",
    "ruff>=0.12.7",
]
